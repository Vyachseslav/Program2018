<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Kachatel2018.Styles"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- Double values -->
    <system:Double x:Key="MenuButtonHeight">30</system:Double>
    <system:Double x:Key="MenuButtonWidth">105</system:Double>
    <Thickness x:Key="BorderThcknessMouseOver">2</Thickness>
    <Thickness x:Key="BorderThcknessPressed">2</Thickness>
    
    <!-- Стиль для кнопок управления окном. -->
    <Style TargetType="{x:Type Button}" x:Key="MinimizeButtonStyle">
        <Setter Property="Template" Value="{DynamicResource ButtonForWindowControl}" />
        <Setter Property="Background" Value="{DynamicResource MinimizeButtonColor}" />
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <Rectangle Width="12" Height="1" Fill="{DynamicResource FillButtonColor}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="0,0,0,-6"/>
                </Grid>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="ToolTip" Value="Свернуть окно" />
    </Style>    
    <Style TargetType="{x:Type Button}" x:Key="MaximizeButtonStyle">
        <Setter Property="Template" Value="{DynamicResource ButtonForWindowControl}" />
        <Setter Property="Background" Value="{DynamicResource MaximizeButtonColor}" />
        <!-- WindowControlButtonBackgroundColor-->
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <Border Height="12" Width="12" BorderBrush="{DynamicResource FillButtonColor}" BorderThickness="1,2,1,1"/>
                </Grid>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="ToolTip" Value="Развернуть окно" />
    </Style>    
    <Style TargetType="{x:Type Button}" x:Key="CloseButtonStyle">
        <Setter Property="Template" Value="{DynamicResource ButtonForWindowControl}" />
        <Setter Property="Background" Value="{DynamicResource CloseButtonColor}" />
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <Line X1="0" Y1="0" X2="12" Y2="12" Stroke="{DynamicResource FillButtonColor}" />
                    <Line X1="12" Y1="0" X2="0" Y2="12" Stroke="{DynamicResource FillButtonColor}" />
                </Grid>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="ToolTip" Value="Закрыть окно" />
        <!--<Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFC11C1C" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource WindowControlButtonBackgroundColor}" />
            </Trigger>
        </Style.Triggers>-->
    </Style>
    
    <!-- Шаблон для кнопок меню. -->
    <ControlTemplate TargetType="Button" x:Key="ButtonForMenuTemplate">
        <Border CornerRadius="5" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                Height="30" 
                Width="105">
            <ContentControl Margin="5" 
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Top" 
                            Content="{TemplateBinding Content}" 
                            Foreground="{DynamicResource TemplateContentForeground}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="{DynamicResource BorderThcknessMouseOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TemplateContentBorderBrushMouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" Value="{DynamicResource BorderThcknessPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TemplateContentBorderBrushPressed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>    
    <!-- Стиль для кнопок меню. -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonForMenuStyle">
        <Setter Property="Template" Value="{DynamicResource ButtonForMenuTemplate}" />
        <Setter Property="Background" Value="{DynamicResource MainButtonBackgroundColor}" />
    </Style>
    
    
    <!-- Шаблон для кнопок в StackPanel. -->
    <!--BorderBrush="{DynamicResource TemplateBorderBackground}"-->
    <ControlTemplate TargetType="Button" x:Key="ButtonIntoStackPanel">
        <Border CornerRadius="3" 
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    Background="{TemplateBinding Background}"
                    Height="40"
                    Margin="0,5,0,5">
            <!--<Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFD9EEF7" Offset="0"/>
                        <GradientStop Color="#FFE1F4FD" Offset="1"/>
                        <GradientStop Color="#FFB0D8EC" Offset="0.451"/>
                        <GradientStop Color="#FF9EE0FF" Offset="0.601"/>
                        <GradientStop Color="#FFBFE0F0" Offset="0.694"/>
                    </LinearGradientBrush>
                </Border.Background>-->
            <ContentControl Margin="25,0,0,0" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Content="{TemplateBinding Content}" 
                            Foreground="{DynamicResource ContentForeground}" 
                            FontSize="14" 
                            FontWeight="Medium" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ContentBackgroundMouseOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ContentBorderColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource ContentBackgroundNotMouseOver}" />
                <Setter Property="BorderBrush" Value="{DynamicResource TemplateBorderBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ContentBackgroundPressed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Шаблон для кнопок управления окном. -->
    <ControlTemplate TargetType="Button" x:Key="ButtonForWindowControl">
        <Border CornerRadius="30" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" Height="20" Width="20">
            <!--<Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="Black"></DropShadowEffect>
                </Border.Effect>-->
            <ContentControl Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}">
                <!--<ContentControl.Effect>
                        <DropShadowEffect BlurRadius="0"></DropShadowEffect>
                    </ContentControl.Effect>-->
            </ContentControl>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Orange" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>   

    
    <!-- Шаблон для ToggleButton главного меню. -->
    <ControlTemplate TargetType="ToggleButton" x:Key="MainMenuToggleButtonTemplate">
        <Border CornerRadius="25" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                Height="30" 
                Width="30">
            <!--<Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="Black"></DropShadowEffect>
                </Border.Effect>-->
            <ContentControl Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="{TemplateBinding Content}">
                <!--<ContentControl.Effect>
                        <DropShadowEffect BlurRadius="0"></DropShadowEffect>
                    </ContentControl.Effect>-->
            </ContentControl>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushMouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- Стиль для ToggleButton главного меню. -->
    <Style TargetType="{x:Type ToggleButton}" x:Key="MainMenuButtonStyle">
        <Setter Property="Template" Value="{DynamicResource MainMenuToggleButtonTemplate}" />
        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundColor}" />
        <Setter Property="Content">
            <Setter.Value>
                <Grid>
                    <StackPanel VerticalAlignment="Center">
                        <Rectangle Fill="{DynamicResource ToggleButtonFillColor}" Width="25" Height="3" />
                        <Rectangle Fill="{DynamicResource ToggleButtonFillColor}" Width="25" Height="3" Margin="0,3,0,0" />
                        <Rectangle Fill="{DynamicResource ToggleButtonFillColor}" Width="25" Height="3" Margin="0,3,0,0" />
                    </StackPanel>
                </Grid>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="Visibility" Value="Visible" />-->
        <Setter Property="ToolTip" Value="Главное меню" />
        <Setter Property="IsChecked" Value="False" />
        <!--<Style.Triggers>
            <EventTrigger RoutedEvent="ToggleButton.Checked">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="myBorder"
                                                 Duration="0:0:0.300" 
                                                 Storyboard.TargetProperty="Width" 
                                                 From="0" To="270" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                <EventTrigger.Actions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="myBorder"
                                                 Duration="0:0:0.300" 
                                                 Storyboard.TargetProperty="Width" 
                                                 From="270" To="0" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </Style.Triggers>-->
    </Style>

    <!--  -->
    <ControlTemplate TargetType="Button" x:Key="ButtonForDialogForms">
        <Border CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}"                      
                    Background="{TemplateBinding Background}"
                    Height="25"
                    Margin="0,0,0,0" Width="75">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="{TemplateBinding Content}" 
                            Foreground="{DynamicResource ForegroundButtonDialoFormDefault}" 
                            FontSize="15" 
                            FontWeight="SemiBold" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundButtonDialoFormDefault}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundMouseOverButtonDialoFormDefault}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundPressedButtonDialoFormDefault}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="CancelButtonForDialogForms">
        <Border CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}"                      
                    Background="{TemplateBinding Background}"
                    Height="25"
                    Margin="0,0,0,0" Width="75">
            <ContentControl HorizontalAlignment="Center" VerticalAlignment="Center" 
                            Content="{TemplateBinding Content}" 
                            FontSize="15" 
                            FontWeight="SemiBold" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundButtonDialoFormDefault}" />
                <Setter Property="ContentControl.Foreground" Value="{DynamicResource ForegroundCancelButtonDialoFormDefault}" />
                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource BackgroundMouseOverButtonDialoFormDefault}" />
                <Setter Property="ContentControl.Foreground" Value="{DynamicResource ForegroundButtonDialoFormDefault}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundPressedButtonDialoFormDefault}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Нигде не используется.
    <ControlTemplate TargetType="Button" x:Key="EllipseButton">
        <Border CornerRadius="25" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" Height="20" Width="20">
           <Border.Effect>
                    <DropShadowEffect ShadowDepth="0" Color="Black"></DropShadowEffect>
                </Border.Effect>
            <ContentControl Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}">
                <ContentControl.Effect>
                        <DropShadowEffect BlurRadius="0"></DropShadowEffect>
                    </ContentControl.Effect>
            </ContentControl>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="Orange" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="Button" x:Key="btnSelyakovButtonn">
        <Border CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" Height="40" Width="100">
            <ContentControl Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" Foreground="LightGray">
            </ContentControl>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="Orange" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate TargetType="Button" x:Key="StandartButton">
            <Border CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" Height="30" Width="105">
                <ContentControl Margin="5,0,5,0" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                Content="{TemplateBinding Content}" Foreground="White">
                </ContentControl>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="Orange" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderThickness" Value="2" />
                    <Setter Property="BorderBrush" Value="Black" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    -->

</ResourceDictionary>